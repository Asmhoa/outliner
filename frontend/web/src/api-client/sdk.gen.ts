// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from './client';
import { client } from './client.gen';
import type { AddBlockBlocksPostData, AddBlockBlocksPostErrors, AddBlockBlocksPostResponses, AddPagePagesPostData, AddPagePagesPostErrors, AddPagePagesPostResponses, AddWorkspaceWorkspacesPostData, AddWorkspaceWorkspacesPostErrors, AddWorkspaceWorkspacesPostResponses, DeleteBlockBlocksBlockIdDeleteData, DeleteBlockBlocksBlockIdDeleteErrors, DeleteBlockBlocksBlockIdDeleteResponses, DeletePagePagesPageIdDeleteData, DeletePagePagesPageIdDeleteErrors, DeletePagePagesPageIdDeleteResponses, DeleteWorkspaceWorkspacesWorkspaceIdDeleteData, DeleteWorkspaceWorkspacesWorkspaceIdDeleteErrors, DeleteWorkspaceWorkspacesWorkspaceIdDeleteResponses, GetBlockBlockBlockIdGetData, GetBlockBlockBlockIdGetErrors, GetBlockBlockBlockIdGetResponses, GetBlocksBlocksPageIdGetData, GetBlocksBlocksPageIdGetErrors, GetBlocksBlocksPageIdGetResponses, GetPagePagesPageIdGetData, GetPagePagesPageIdGetErrors, GetPagePagesPageIdGetResponses, GetPagesPagesGetData, GetPagesPagesGetResponses, GetWorkspacesWorkspacesGetData, GetWorkspacesWorkspacesGetResponses, GetWorkspaceWorkspacesWorkspaceIdGetData, GetWorkspaceWorkspacesWorkspaceIdGetErrors, GetWorkspaceWorkspacesWorkspaceIdGetResponses, RenamePagePagesPutData, RenamePagePagesPutErrors, RenamePagePagesPutResponses, UpdateBlockContentBlocksContentPutData, UpdateBlockContentBlocksContentPutErrors, UpdateBlockContentBlocksContentPutResponses, UpdateBlockParentBlocksParentPutData, UpdateBlockParentBlocksParentPutErrors, UpdateBlockParentBlocksParentPutResponses, UpdateWorkspaceWorkspacesPutData, UpdateWorkspaceWorkspacesPutErrors, UpdateWorkspaceWorkspacesPutResponses } from './types.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Pages
 */
export const getPagesPagesGet = <ThrowOnError extends boolean = false>(options?: Options<GetPagesPagesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetPagesPagesGetResponses, unknown, ThrowOnError>({
        url: '/pages',
        ...options
    });
};

/**
 * Add Page
 */
export const addPagePagesPost = <ThrowOnError extends boolean = false>(options: Options<AddPagePagesPostData, ThrowOnError>) => {
    return (options.client ?? client).post<AddPagePagesPostResponses, AddPagePagesPostErrors, ThrowOnError>({
        url: '/pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Rename Page
 */
export const renamePagePagesPut = <ThrowOnError extends boolean = false>(options: Options<RenamePagePagesPutData, ThrowOnError>) => {
    return (options.client ?? client).put<RenamePagePagesPutResponses, RenamePagePagesPutErrors, ThrowOnError>({
        url: '/pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Page
 */
export const deletePagePagesPageIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeletePagePagesPageIdDeleteData, ThrowOnError>) => {
    return (options.client ?? client).delete<DeletePagePagesPageIdDeleteResponses, DeletePagePagesPageIdDeleteErrors, ThrowOnError>({
        url: '/pages/{page_id}',
        ...options
    });
};

/**
 * Get Page
 */
export const getPagePagesPageIdGet = <ThrowOnError extends boolean = false>(options: Options<GetPagePagesPageIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetPagePagesPageIdGetResponses, GetPagePagesPageIdGetErrors, ThrowOnError>({
        url: '/pages/{page_id}',
        ...options
    });
};

/**
 * Add Block
 */
export const addBlockBlocksPost = <ThrowOnError extends boolean = false>(options: Options<AddBlockBlocksPostData, ThrowOnError>) => {
    return (options.client ?? client).post<AddBlockBlocksPostResponses, AddBlockBlocksPostErrors, ThrowOnError>({
        url: '/blocks',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get Block
 */
export const getBlockBlockBlockIdGet = <ThrowOnError extends boolean = false>(options: Options<GetBlockBlockBlockIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetBlockBlockBlockIdGetResponses, GetBlockBlockBlockIdGetErrors, ThrowOnError>({
        url: '/block/{block_id}',
        ...options
    });
};

/**
 * Get Blocks
 */
export const getBlocksBlocksPageIdGet = <ThrowOnError extends boolean = false>(options: Options<GetBlocksBlocksPageIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetBlocksBlocksPageIdGetResponses, GetBlocksBlocksPageIdGetErrors, ThrowOnError>({
        url: '/blocks/{page_id}',
        ...options
    });
};

/**
 * Update Block Content
 */
export const updateBlockContentBlocksContentPut = <ThrowOnError extends boolean = false>(options: Options<UpdateBlockContentBlocksContentPutData, ThrowOnError>) => {
    return (options.client ?? client).put<UpdateBlockContentBlocksContentPutResponses, UpdateBlockContentBlocksContentPutErrors, ThrowOnError>({
        url: '/blocks/content',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Block Parent
 */
export const updateBlockParentBlocksParentPut = <ThrowOnError extends boolean = false>(options: Options<UpdateBlockParentBlocksParentPutData, ThrowOnError>) => {
    return (options.client ?? client).put<UpdateBlockParentBlocksParentPutResponses, UpdateBlockParentBlocksParentPutErrors, ThrowOnError>({
        url: '/blocks/parent',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Block
 */
export const deleteBlockBlocksBlockIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteBlockBlocksBlockIdDeleteData, ThrowOnError>) => {
    return (options.client ?? client).delete<DeleteBlockBlocksBlockIdDeleteResponses, DeleteBlockBlocksBlockIdDeleteErrors, ThrowOnError>({
        url: '/blocks/{block_id}',
        ...options
    });
};

/**
 * Get Workspaces
 */
export const getWorkspacesWorkspacesGet = <ThrowOnError extends boolean = false>(options?: Options<GetWorkspacesWorkspacesGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetWorkspacesWorkspacesGetResponses, unknown, ThrowOnError>({
        url: '/workspaces',
        ...options
    });
};

/**
 * Add Workspace
 */
export const addWorkspaceWorkspacesPost = <ThrowOnError extends boolean = false>(options: Options<AddWorkspaceWorkspacesPostData, ThrowOnError>) => {
    return (options.client ?? client).post<AddWorkspaceWorkspacesPostResponses, AddWorkspaceWorkspacesPostErrors, ThrowOnError>({
        url: '/workspaces',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update Workspace
 */
export const updateWorkspaceWorkspacesPut = <ThrowOnError extends boolean = false>(options: Options<UpdateWorkspaceWorkspacesPutData, ThrowOnError>) => {
    return (options.client ?? client).put<UpdateWorkspaceWorkspacesPutResponses, UpdateWorkspaceWorkspacesPutErrors, ThrowOnError>({
        url: '/workspaces',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Delete Workspace
 */
export const deleteWorkspaceWorkspacesWorkspaceIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteWorkspaceWorkspacesWorkspaceIdDeleteData, ThrowOnError>) => {
    return (options.client ?? client).delete<DeleteWorkspaceWorkspacesWorkspaceIdDeleteResponses, DeleteWorkspaceWorkspacesWorkspaceIdDeleteErrors, ThrowOnError>({
        url: '/workspaces/{workspace_id}',
        ...options
    });
};

/**
 * Get Workspace
 */
export const getWorkspaceWorkspacesWorkspaceIdGet = <ThrowOnError extends boolean = false>(options: Options<GetWorkspaceWorkspacesWorkspaceIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetWorkspaceWorkspacesWorkspaceIdGetResponses, GetWorkspaceWorkspacesWorkspaceIdGetErrors, ThrowOnError>({
        url: '/workspaces/{workspace_id}',
        ...options
    });
};
